Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000
	


2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10000
ii. Hours = 1562
iii. Category = 2643
iv. Attribute = 1115
v. Review = 10000
vi. Checkin = 493 (business_id)
vii. Photo = 10000
viii. Tip = 3979 (business_id)
ix. User = 10000 
x. Friend = 11
xi. Elite_years = 2780

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.	



3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no. (I am not counting empty strings as null values)
	
	
	SQL code used to arrive at answer:
	
SELECT COUNT(*) as counts

FROM user

WHERE id is NULL or name is NULL or review_count is NULL or yelping_since is NULL or useful is NULL or funny is NULL or cool is NULL or fans is NULL or average_stars is NULL or compliment_hot is NULL or compliment_more is NULL or compliment_profile is NULL or compliment_cute is NULL or compliment_list is NULL or compliment_note is NULL or compliment_plain is NULL or compliment_cool is NULL or compliment_funny is NULL or compliment_writer is NULL or compliment_photos is NULL	
	

	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1 	        max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
SELECT SUM(review_count) as total,city

FROM business

GROUP BY city

ORDER BY total DESC

	
	
	Copy and Paste the Result Below:
+-------+-----------------+
| total | city            |
+-------+-----------------+
| 82854 | Las Vegas       |
| 34503 | Phoenix         |
| 24113 | Toronto         |
| 20614 | Scottsdale      |
| 12523 | Charlotte       |
| 10871 | Henderson       |
| 10504 | Tempe           |
|  9798 | Pittsburgh      |
|  9448 | Montréal        |
|  8112 | Chandler        |
|  6875 | Mesa            |
|  6380 | Gilbert         |
|  5593 | Cleveland       |
|  5265 | Madison         |
|  4406 | Glendale        |
|  3814 | Mississauga     |
|  2792 | Edinburgh       |
|  2624 | Peoria          |
|  2438 | North Las Vegas |
|  2352 | Markham         |
|  2029 | Champaign       |
|  1849 | Stuttgart       |
|  1520 | Surprise        |
|  1465 | Lakewood        |
|  1155 | Goodyear        |
+-------+-----------------+
(Output limit exceeded, 25 of 362 total rows shown)
	

	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, COUNT(*) as counts

FROM business

WHERE city = 'Avon'

GROUP BY stars


Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+--------+
| stars | counts |
+-------+--------+
|   1.5 |      1 |
|   2.5 |      2 |
|   3.5 |      3 |
|   4.0 |      2 |
|   4.5 |      1 |
|   5.0 |      1 |
+-------+--------+

ii. Beachwood

SQL code used to arrive at answer:

SELECT stars, COUNT(*) as counts

FROM business

WHERE city = 'Beachwood'

GROUP BY stars



Copy and Paste the Resulting Table Below (2 columns – star rating and count):
+-------+--------+
| stars | counts |
+-------+--------+
|   2.0 |      1 |
|   2.5 |      1 |
|   3.0 |      2 |
|   3.5 |      2 |
|   4.0 |      1 |
|   4.5 |      2 |
|   5.0 |      5 |
+-------+--------+		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	SELECT name, review_count
	
FROM user 

        ORDER BY review_count DESC
	LIMIT 3
		
	Copy and Paste the Result Below:

| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+
	
		


8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	

	By running the code from Question 7 we get the following table of top users according to number of reviews
+-----------+--------------+
| name      | review_count |
+-----------+--------------+
| Gerald    |         2000 |
| Sara      |         1629 |
| Yuri      |         1339 |
| .Hon      |         1246 |
| William   |         1215 |
| Harald    |         1153 |
| eric      |         1116 |
| Roanna    |         1039 |
| Mimi      |          968 |
| Christine |          930 |
| Ed        |          904 |
| Nicole    |          864 |
| Fran      |          862 |
| Mark      |          861 |
| Christina |          842 |
| Dominic   |          836 |
| Lissa     |          834 |
| Lisa      |          813 |
| Alison    |          775 |
| Sui       |          754 |
| Tim       |          702 |
| L         |          696 |
| Angela    |          694 |
| Crissy    |          676 |
| Lyn       |          675 |
+-----------+--------------+

Using the same code but ordering by fans we get the following table of top users
+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
| Mark      |  115 |
| Tiffany   |  111 |
| bernice   |  105 |
| Roanna    |  104 |
| Angela    |  101 |
| .Hon      |  101 |
| Ben       |   96 |
| Linda     |   89 |
| Christina |   85 |
| Jessica   |   84 |
| Greg      |   81 |
| Nieves    |   80 |
| Sui       |   78 |
| Yuri      |   76 |
| Nicole    |   73 |
+-----------+------+
we see that although Gerald seems to be top 3 on both tables, Sara and Uri who are top according to review counts do not appear in the top 25 users according to fans. So, we will conclude that they are not correlated.

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: There are more reviews with the word love.
1780 reviews with the word love and 232 with the word hate.

	
	SQL code used to arrive at answer:
SELECT COUNT(*) as counts
FROM review
WHERE text LIKE'%love%' 

SELECT COUNT(*) as counts
FROM review
WHERE text LIKE'%hate%' 

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
SELECT name, fans
FROM user 
ORDER BY fans DESC
LIMIT 10	
	Copy and Paste the Result Below:

+-----------+------+
| name      | fans |
+-----------+------+
| Amy       |  503 |
| Mimi      |  497 |
| Harald    |  311 |
| Gerald    |  253 |
| Christine |  173 |
| Lisa      |  159 |
| Cat       |  133 |
| William   |  126 |
| Fran      |  124 |
| Lissa     |  120 |
+-----------+------+
11. Is there a strong relationship (or correlation) between having a high number of fans and being listed as "useful" or "funny?" Out of the top 10 users with the highest number of fans, what percent are also listed as “useful” or “funny”?

Key:
0% - 25% - Low relationship
26% - 75% - Medium relationship
76% - 100% - Strong relationship
	
	SQL code used to arrive at answer:
SELECT name, fans, useful, funny
FROM user 
ORDER BY fans DESC
LIMIT 10	
	Copy and Paste the Result Below:
+-----------+------+--------+--------+
| name      | fans | useful |  funny |
+-----------+------+--------+--------+
| Amy       |  503 |   3226 |   2554 |
| Mimi      |  497 |    257 |    138 |
| Harald    |  311 | 122921 | 122419 |
| Gerald    |  253 |  17524 |   2324 |
| Christine |  173 |   4834 |   6646 |
| Lisa      |  159 |     48 |     13 |
| Cat       |  133 |   1062 |    672 |
| William   |  126 |   9363 |   9361 |
| Fran      |  124 |   9851 |   7606 |
| Lissa     |  120 |    455 |    150 |
+-----------+------+--------+--------+
All top 10 users with the highest number of fans are listed as useful or funny. So there is a strong relationship.
	Please explain your findings and interpretation of the results:
From these results we can say that there is a strong relationship with the top users and whether they are listed as useful or funny. 	
	
	

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

I have chosen to look at all the businesses in the categories (Pubs, Restaurants,Nightlife) in Chandler city.	
i. Do the two groups you chose to analyze have a different distribution of hours?
There is one business in each group (same business in different categories)
Businesses with 4-5 stars are open Sunday to Thursday 11.00 - 00.00 and Friday to Saturday 11.00 - 2.00
Businesses with 2-3 stars are open Monday to Thursday 11.00 - 00.30, Friday 11.00 - 2.30 ,Saturday 9.00 - 2.30 and Sunday 9.00 -00.30.

We do not see much difference in the distribution of hours however we do not have a big enough sample.
ii. Do the two groups you chose to analyze have a different number of reviews?
    The group with 2-3 stars has 141 reviews while the the group with 4-5 stars has 75 reviews    
         
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
+----------+-------+-------------+-------------+----------+-----------+------------------------+
| city     | stars | category    | postal_code | latitude | longitude | id                     |
+----------+-------+-------------+-------------+----------+-----------+------------------------+
| Chandler |   4.0 | Nightlife   | 85226       |  33.3163 |  -111.968 | 1AxEmgv8Dsr3iU9Aa40jPw |
| Chandler |   4.0 | Restaurants | 85226       |  33.3163 |  -111.968 | 1AxEmgv8Dsr3iU9Aa40jPw |
+----------+-------+-------------+-------------+----------+-----------+------------------------+

+----------+-------+-------------+-------------+----------+-----------+------------------------+
| city     | stars | category    | postal_code | latitude | longitude | id                     |
+----------+-------+-------------+-------------+----------+-----------+------------------------+
| Chandler |   3.0 | Restaurants | 85225       |  33.3028 |  -111.842 | 0CAzhX1w9qGD8iz4F8XZjQ |
| Chandler |   3.0 | Pubs        | 85225       |  33.3028 |  -111.842 | 0CAzhX1w9qGD8iz4F8XZjQ |
| Chandler |   3.0 | Nightlife   | 85225       |  33.3028 |  -111.842 | 0CAzhX1w9qGD8iz4F8XZjQ |
+----------+-------+-------------+-------------+----------+-----------+------------------------+
We used as location data, the postal code, latitude and longitude however this has not been useful without a map to understand the location better. Neighborhood was an empty string for both groups so we did not include it. As we are also looking at only two examples it is hard to make any inference.


SQL code used for analysis:
SELECT b.city, b.stars, c.category, h.hours, b.id
FROM ((business b INNER JOIN category c ON b.id = c.business_id) INNER JOIN hours h ON b.id = h.business_id)
WHERE b.city = 'Chandler' and b.stars IN (4.0,5.0) and c.category IN ('Pubs', 'Restaurants', 'Nightlife')

SELECT b.city, b.stars, c.category, h.hours, b.id
FROM ((business b INNER JOIN category c ON b.id = c.business_id) INNER JOIN hours h ON b.id = h.business_id)
WHERE b.city = 'Chandler' and b.stars IN (2.0,3.0) and c.category IN ('Pubs', 'Restaurants', 'Nightlife')

		
SELECT b.city, b.stars, c.category,b.review_count, b.id
FROM business b INNER JOIN category c ON b.id = c.business_id
WHERE b.city = 'Chandler' and b.stars IN (4.0,5.0) and c.category IN ('Pubs', 'Restaurants', 'Nightlife')

SELECT b.city, b.stars, c.category,b.review_count, b.id
FROM business b INNER JOIN category c ON b.id = c.business_id
WHERE b.city = 'Chandler' and b.stars IN (2.0,3.0) and c.category IN ('Pubs', 'Restaurants', 'Nightlife')

SELECT b.city, b.stars, c.category,b.postal_code, b.latitude, b.longitude, b.id
FROM business b INNER JOIN category c ON b.id = c.business_id
WHERE b.city = 'Chandler' and b.stars IN (4.0,5.0) and c.category IN ('Pubs', 'Restaurants', 'Nightlife')

SELECT b.city, b.stars, c.category,b.postal_code, b.latitude, b.longitude, b.id
FROM business b INNER JOIN category c ON b.id = c.business_id
WHERE b.city = 'Chandler' and b.stars IN (2.0,3.0) and c.category IN ('Pubs', 'Restaurants', 'Nightlife')
		
2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1: There are 1520 businesses that are closed and 8480 businesses that are still open.
         
         
ii. Difference 2: The average review_count of the closed businesses is 23.2 and of the still open businesses 31.8.
         
         
         
SQL code used for analysis:

SELECT b.is_open, AVG(b.stars), AVG(b.review_count), COUNT(*) as total
FROM business b
GROUP BY b.is_open 
	
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
   We choose to prepare a dataset for predicting the overall rating for a business. 
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

For this task we need to gather the features that can be useful as inputs in a predictive model.  First of all we need the star ratings for the businesses which will be used as our labels. The business id and name are also needed to uniquely identify a data point. Our aim is to create a dataset that will be loaded in a programming language, e.g. Python, to continue further with the modelling task.

As we are interested in the overall rating of the business and not at the rating of a specific review from a specific user we will focus on the business table. We choose to use the following location features, address. city, state, postcode. We omit the neighborhood as it has many empty strings and the longitude and latitude as less useful. We will also keep the name of the review counts and whether the business is still open or not for our dataset, although these features might not be used at the predictive model as if we get a new business to predict its stars it will probably be open and we will not know the number of reviews that will be posted for it. We can drop any unnecessary features easily in python. We believe that the category of the business should be included as a feature. By joining the category table we might get different categories for the same restaurant. We will keep all of these duplicate entries as they are, and possibly deal with it in python (e.g. decide on merging categories)
                       
From the business table                   
iii. Output of your finished dataset:
Showing first 10 rows only

+------------------------+-------------------------------+----------------------------+---------------------+-------+----------+---------+------+-----------------------+
| id                     | Name                          | Address                    | City                | State | Postcode | reviews | open | category              |
+------------------------+-------------------------------+----------------------------+---------------------+-------+----------+---------+------+-----------------------+
| -0DET7VdEQOJVJ_v6klEug | Flaming Kitchen               | 3235 York Regional Road 7  | Markham             | ON    | L3R 3P9  |      25 |    1 | Asian Fusion          |
| -0DET7VdEQOJVJ_v6klEug | Flaming Kitchen               | 3235 York Regional Road 7  | Markham             | ON    | L3R 3P9  |      25 |    1 | Restaurants           |
| -1H-8MO9uEyS9MGmPz3RQw | S-Bahnhof Stuttgart-Vaihingen | Am Bahnhof 1               | Stuttgart-Vaihingen | BW    | 70563    |       4 |    1 | Transportation        |
| -1H-8MO9uEyS9MGmPz3RQw | S-Bahnhof Stuttgart-Vaihingen | Am Bahnhof 1               | Stuttgart-Vaihingen | BW    | 70563    |       4 |    1 | Public Transportation |
| -1H-8MO9uEyS9MGmPz3RQw | S-Bahnhof Stuttgart-Vaihingen | Am Bahnhof 1               | Stuttgart-Vaihingen | BW    | 70563    |       4 |    1 | Hotels & Travel       |
| -1H-8MO9uEyS9MGmPz3RQw | S-Bahnhof Stuttgart-Vaihingen | Am Bahnhof 1               | Stuttgart-Vaihingen | BW    | 70563    |       4 |    1 | Train Stations        |
| -1H-8MO9uEyS9MGmPz3RQw | S-Bahnhof Stuttgart-Vaihingen | Am Bahnhof 1               | Stuttgart-Vaihingen | BW    | 70563    |       4 |    1 | Metro Stations        |
| -2bYV9zVtn2F5XpiAaHt5A | Deli 194                      | 194 Portobello High Street | Edinburgh           | EDH   | EH15 1EX |       4 |    1 | Restaurants           |
| -2bYV9zVtn2F5XpiAaHt5A | Deli 194                      | 194 Portobello High Street | Edinburgh           | EDH   | EH15 1EX |       4 |    1 | Delis                 |
| -2HjuT4yjLZ3b5f_abD87Q | Freeman's Car Stereo          | 4821 South Blvd            | Charlotte           | NC    | 28217    |       8 |    1 | Electronics           |
+------------------------+-------------------------------+----------------------------+---------------------+-------+----------+---------+------+-----------------------+
         
         
iv. Provide the SQL code you used to create your final dataset:

SELECT b.id as id ,b.name as Name,b.address as Address, b.city as City, b.state as State, b.postal_code as Postcode, b.review_count as reviews,b.is_open as open, c.category as category
FROM business b  INNER JOIN category c ON b.id = c.business_id
